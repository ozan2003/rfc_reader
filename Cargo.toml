[package]
name = "rfc_reader"
version = "0.7.0"
rust-version = "1.88.0"
edition = "2024"
description = "A TUI based RFC viewer"
repository = "https://github.com/ozan2003/rfc_reader"
keywords = [
    "rust",
    "caching",
    "viewer",
    "table-of-contents",
    "tui",
    "argument-parsing",
    "offline-capable",
    "text-search",
    "http-request",
    "rfcs",
    "reader-ui",
    "request-for-comments",
    "command-line",
    "ratatui",
]
license-file = "LICENSE"


[dependencies]
anyhow = "1.0.99"
bitflags = "2.9.2"
cached = "0.56.0"
clap = { version = "4.5.45", features = ["cargo"] }
# align with ratatui's crossterm version to not compile crossterm twice
# i'm only using event handling, no need for the serde, event-stream stuff
crossterm = { version = "0.28.1", default-features = false, features = [
    "events",
] }
directories = "6.0.0"
env_logger = "0.11.8"
log = "0.4.27"
ratatui = "0.29.0"
regex = "1.11.1"
textwrap = "0.16.2"
# remove rustls from dependencies since im using native-tls anyway
ureq = { version = "3.1.0", default-features = false, features = [
    "native-tls",
] }

[dev-dependencies]
tempfile = "3.21.0"

[lints.clippy]
correctness = { level = "forbid", priority = -1 }
perf = { level = "forbid", priority = -2 }
pedantic = { level = "deny", priority = -3 }
style = { level = "warn", priority = -4 }
complexity = { level = "warn", priority = -5 }
suspicious = { level = "warn", priority = -6 }

redundant-clone = { level = "warn", priority = -4 }
derive-partial-eq-without-eq = { level = "warn", priority = -5 }
unnecessary-struct-initialization = { level = "warn", priority = -6 }
redundant-pub-crate = { level = "warn", priority = -7 }
missing-const-for-fn = { level = "deny", priority = -8 }
undocumented_unsafe_blocks = { level = "deny", priority = -8 }
branches_sharing_code = { level = "warn", priority = -9 }
uninlined-format-args = "allow"

arithmetic_side_effects = { level = "warn", priority = 0 }
unchecked_duration_subtraction = { level = "deny", priority = 0 }

# Misc
multiple_unsafe_ops_per_block = { level = "warn", priority = 0 }
unwrap_used = { level = "warn", priority = 0 }                   # Prefer ? or expect
lossy_float_literal = { level = "warn", priority = 0 }
float_cmp = { level = "warn", priority = 0 }
float_cmp_const = { level = "warn", priority = 0 }
while_float = { level = "warn", priority = 0 }
string_slice = { level = "warn", priority = 0 }
get_unwrap = { level = "warn", priority = 0 }
mem_forget = { level = "warn", priority = 0 }
use_self = { level = "warn", priority = 0 }
useless_let_if_seq = { level = "warn", priority = 0 }

# The profile that 'dist' will build with
[profile.dist]
inherits = "release"
lto = "thin"
